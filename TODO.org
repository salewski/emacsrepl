* Basics [2/6]

** TODO Modularization

This would allow for a less hacky shell script:

#+BEGIN_SRC shell
emacs -Q --batch -l foo.el -l bar.el -f repl
#+END_SRC

Candidates:

- readline.el
- repl.el

** TODO History support

- Save successful (not cancelled or erroneous) to a history ring
- Recognize =C-p= / =<up>= and =C-n= / =<down>=

** TODO Persistent history

- Save history to file after quitting
- Load history from file after start
- Support a hardcoded file location
- Support an environment variable

** DONE Dumb mode

Not everything supports our fancy control codes.  It would be better
to check =TERM= and disable printing them for dumb terminals.

** DONE Support UTF-8

- Extend the state machine to handle UTF-8 sequences
- Convert a recognized UTF-8 sequence into a multibyte character
- Print multi-byte characters
- Downside: other multi-byte encodings will be turned into even
  weirder gibberish than before

** TODO Support all linenoise bindings

- =C-t= (swap previous and current char, advance cursor by one)
- =C-p/C-n= (prev/next history item)
- =C-u= (delete entire line)
- =C-k= (delete to end)
- =C-w= (delete previous word)

* Nice to have [0/14]

** TODO Quoted insert

** TODO Bracketed paste

** TODO User file

** TODO Indentation

** TODO Continuation prompts

** TODO Multi-line editing

Currently editing a line longer than the terminal width results in
undefined behaviour, typically printing beyond it will work, but
deleting only affect the visual continuation line...

Take a look at how the linenoise multi-line algorithm works for this.

** TODO Undo

** TODO Paredit

** TODO Better error messages

** TODO Completion

** TODO History search

** TODO Syntax highlighting

** TODO Pretty-printing

** TODO "Comma" commands
